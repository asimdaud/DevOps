name: Terraform Plan

on:
  pull_request:
    branches:
      - master

permissions:
  pull-requests: write


jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.0

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Initialize Terraform
      run: terraform init
      working-directory: ./terraform/test

    - name: Validate Terraform
      run: terraform validate
      working-directory: ./terraform/test

    - name: Terraform Plan only
      run: terraform plan
      working-directory: ./terraform/test
     
    - name: Plan Terraform
      id: plan
      run: terraform plan -no-color > plan.txt
      working-directory: ./terraform/test

    - name: Format plan
      id: format-plan
      run: |
        plan=$(cat <<'EOF'
        ${{ format('{0}{1}', steps.plan.outputs.stdout, steps.plan.outputs.stderr) }}
        EOF
        )
        echo "PLAN<<EOF" >> $GITHUB_ENV
        echo "${plan:0:65536}" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV
      working-directory: ./terraform/test

    - name: idksakd
      run: echo $GITHUB_ENV

    # - name: Post Plan to PR
    #   if: ${{ github.event_name == 'pull_request' }}
    #   uses: marocchino/sticky-pull-request-comment@v2
    #   with:
    #     hide_and_recreate: true
    #     hide_classify: "OUTDATED"
    #     path : ./terraform/test/plan.txt

    - uses: actions/github-script@v6
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: 'üëã Thanks for reporting!'
          })



          
    - name: generate random delimiter
      run: echo "DELIMITER=$(uuidgen)" >> $GITHUB_ENV

    - name: truncate terraform plan result
      run: |
        echo "PLAN<<${{ env.DELIMITER }}" >> $GITHUB_ENV
        echo '[maybe truncated]' >> $GITHUB_ENV
        tail --bytes=10000 <<'${{ env.DELIMITER }}' >> $GITHUB_ENV
        ${{ format('{0}{1}', steps.plan.outputs.stderr, steps.plan.outputs.stdout) }}
        ${{ env.DELIMITER }}
        echo >> $GITHUB_ENV
        echo "${{ env.DELIMITER }}" >> $GITHUB_ENV
      working-directory: ./terraform/test
  
    - name: create comment from plan result
      uses: actions/github-script@0.9.0
      if: github.event_name == 'pull_request'
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
          #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
          
          <details><summary>Show Plan</summary>
          
          \`\`\`\n
          ${ process.env.PLAN }
          \`\`\`
          
          </details>
          
          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ inputs.TF_WORK_DIR }}\`, Workflow: \`${{ github.workflow }}\`*`

          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })```
        working-directory: ./terraform/test