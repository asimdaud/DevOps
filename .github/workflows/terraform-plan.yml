name: Terraform Plan

on:
  pull_request:
    branches:
      - master

permissions:
  pull-requests: write


jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.0.0

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Initialize Terraform
      run: terraform init
      working-directory: ./terraform/test

    - name: Validate Terraform
      run: terraform validate
      working-directory: ./terraform/test

    - name: Terraform Plan only
      run: terraform plan
      working-directory: ./terraform/test
     
    - name: Plan Terraform
      id: plan
      run: terraform plan -no-color -input=false
      working-directory: ./terraform/test
          
    - name: generate random delimiter
      run: echo "DELIMITER=$(uuidgen)" >> $GITHUB_ENV

    - name: truncate terraform plan result
      run: |
        echo "PLAN<<${{ env.DELIMITER }}" >> $GITHUB_ENV
        echo '[maybe truncated]' >> $GITHUB_ENV
        tail --bytes=10000 <<'${{ env.DELIMITER }}' >> $GITHUB_ENV
        ${{ format('{0}{1}', steps.plan.outputs.stderr, steps.plan.outputs.stdout) }}
        ${{ env.DELIMITER }}
        echo >> $GITHUB_ENV
        echo "${{ env.DELIMITER }}" >> $GITHUB_ENV
      working-directory: ./terraform/test
  
    
    - name: post plan as sticky comment
      uses: marocchino/sticky-pull-request-comment@v2
      with:
        header: plan
        message: |
          #### Terraform Plan ðŸ“–\`${{ steps.plan.outcome }}\`
          <details><summary>Show Plan</summary>

          ```
          ${{ env.PLAN }}
          ```

          </details>

  